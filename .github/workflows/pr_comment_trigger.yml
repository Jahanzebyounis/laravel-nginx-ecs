name: Trigger on Pull Request Comment

on:
  issue_comment:
    types:
      - "created"
jobs:
  Deploy:
    name: Deploy
    runs-on: ubuntu-latest

# checks if the comments come from pull request
    if: github.event.issue.pull_request && (contains(github.event.comment.body, '/prod') || contains(github.event.comment.body, '/staging') || contains(github.event.comment.body, '/dev'))
    steps:
      - name: Get PR branch
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch

# Set PR Status as Pending
      - name: Set latest commit status as pending
        uses: myrotvorets/set-commit-status-action@master
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.TOKEN_GITHUB }}
          status: pending

# Checkout PR Branch
      - name: Checkout PR branch
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}
          
# Configure AWS credentials.
      - name: Configure AWS credentials
        if: success()
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{secrets.AWS_REGION}}

# Login to AWS ECR
      - name: Login to ECR
        run: |
          aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin 914684874285.dkr.ecr.ap-southeast-1.amazonaws.com

# Build and Deploy to intended Environment
      # - name: Deploy Development
      #   if: contains(github.event.comment.body, '/dev')
      #   run: |
      #     echo "Update AWS ECS Service"
      #     aws ecs update-service --cluster dubicars-main-cluster --service dubicars-main-app --force-new-deployment

#       - name: Deploy Staging
#         if: contains(github.event.comment.body, '/staging')
#         run: |
#           aws ecs update-service --cluster <staging-cluster> --service <staging-service> --force-new-deployment

      - name: Deploy Production
        if: contains(github.event.comment.body, '/prod')
        run: |
          echo "Building Application Docker Image"
          docker build -t 914684874285.dkr.ecr.ap-southeast-1.amazonaws.com/prod_dubicars_app:latest .

          echo "Pushing Application Image to AWS ECR"
          docker push 914684874285.dkr.ecr.ap-southeast-1.amazonaws.com/prod_dubicars_app:latest

          echo "Building Nginx Docker Image"
          docker build -t 914684874285.dkr.ecr.ap-southeast-1.amazonaws.com/prod_nginx:latest ./nginx

          echo "Pushing Nginx Image to AWS ECR"
          docker push 914684874285.dkr.ecr.ap-southeast-1.amazonaws.com/prod_nginx:latest

          echo "Update AWS ECS Service"
          aws ecs update-service --cluster dubicars-main-cluster --service dubicars-main-app --force-new-deployment

# Set latest commit status
      - name: Set latest commit status as ${{ job.status }}
        uses: myrotvorets/set-commit-status-action@master
        if: always()
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.TOKEN_GITHUB }}
          status: ${{ job.status }}
