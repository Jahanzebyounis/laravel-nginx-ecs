name: Trigger on Pull Request Comment

on:
  issue_comment:
    types:
      - "created"
jobs:
  Deploy:
    name: Deploy
    runs-on: ubuntu-latest

# checks if the comments come from pull request
    if: github.event.issue.pull_request && (contains(github.event.comment.body, '/prod') || contains(github.event.comment.body, '/staging') || contains(github.event.comment.body, '/dev'))
    steps:
      - name: Get PR branch
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch

# Set PR Status as Pending
      - name: Set latest commit status as pending
        uses: myrotvorets/set-commit-status-action@master
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.TOKEN_GITHUB }}
          status: pending

# Checkout PR Branch
      - name: Checkout PR branch
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}

# Test deployment based on comments
      - name: Deploy Staging
        if: contains(github.event.comment.body, '/stage')
        run: |
          echo staging deployment in progress

      - name: Deploy Development
        if: contains(github.event.comment.body, '/dev')
        run: |
          echo dev deployment in progress

      - name: Deploy Production
        if: contains(github.event.comment.body, '/prod')
        run: |
          echo prod deployment in progress

# # Configure AWS credentials. build and push docker image to ecr
#       - name: Configure AWS credentials
#         if: success()
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
#           aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
#           aws-region: ${{secrets.AWS_REGION}}
          
#       - name: Login to ECR
#         run: |
#           aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin 914684874285.dkr.ecr.ap-southeast-1.amazonaws.com

#       - name: Run Build Docker build
#         if: success()
#         run: |
#           docker build -t 914684874285.dkr.ecr.ap-southeast-1.amazonaws.com/dubicars_app:latest .

#       - name: Push Image to AWS ECR
#         if: success()
#         run: |
#           docker push 914684874285.dkr.ecr.ap-southeast-1.amazonaws.com/dubicars_app:latest

# Set latest commit status
      - name: Set latest commit status as ${{ job.status }}
        uses: myrotvorets/set-commit-status-action@master
        if: always()
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.TOKEN_GITHUB }}
          status: ${{ job.status }}

#       - name: Notify on failure
#         if: failure()
#         uses: actions/github-script@v5
#         with:
#           script: |
#             github.issues.createComment({
#               issue_number: github.event.issue.number,
#               owner: github.repo.owner,
#               repo: github.repo.repo,
#               body: 'Build or deployment failed!'
#             })